#!/bin/bash

#This script will go one level deep from the current directory
#and if the child directory is:
#a git repo
#and has modified files
#it will
#print out the directory name
#print out the active branch
#print out the modified files

#passing the -b option will print out the branch name even if
#no modifed files are found

STARTDIR=$PWD
echo 

function branch {
  BRANCH=$(git branch  2> /dev/null | grep '^*')
 
  FOUND=0 
  if [ -n "$BRANCH" ]; then 
    echo ${i:2}
    echo " ${BRANCH:2}" 
    FOUND=1
  fi
}

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  echo "Usage: git-info [OPTION]"
  echo "Show branches and modified files in git repos with modified files"
  echo
  echo "-b, --branch  Show branches even of repos without modified files"
  echo "-h, --help    Show this help dialogue"
  exit
fi

for i in `find . -type d -maxdepth 1`
  do 
    {
      cd "$i" || continue
      MODIFIED=$(git status -s --untracked-files=no 2> /dev/null)  
      if [ -n "$MODIFIED" ]; then 
        #modified files were found, so must be a git repo
        branch
        echo "$MODIFIED" 
        echo 
      elif [ "$1" == "-b" ] || [ "$1" == "--branch" ]; then
        
        #the directory might not be a git repo, 
        #as no modified files were found, so only 
        #print something if it reports a branch
        branch 
        if [ $FOUND -eq 1 ]; then
          echo 
        fi

      fi 
      cd "$STARTDIR"
    }
done
